package org.collectionspace.qa.records;

public class Intake extends Record {

    public Intake() {

      // ----- Start of entries generated by an automated script -----
      //
      // (Note: These require review by a human.)
      // (Note: Entries for structured date fields are not yet generated.)

      fieldSelectorByLabel.put("Condition", "csc-intake-conditionInformation");
      fieldSelectorByLabel.put("Condition Check Assessor", "csc-intake-conditionCheckersOrAssessors");
      fieldSelectorByLabel.put("Condition Check Date", "csc-intake-conditionCheckDate");
      fieldSelectorByLabel.put("Condition Check Method", "csc-intake-conditionCheckMethods");
      fieldSelectorByLabel.put("Condition Check Note", "csc-intake-conditionCheckNote");
      fieldSelectorByLabel.put("Condition Check Reason", "csc-intake-conditionCheckReasons");
      fieldSelectorByLabel.put("Condition Check Reference Number", "csc-intake-conditionCheckReferenceNumber");
      fieldSelectorByLabel.put("Current Location", "csc-intake-currentLocation");
      fieldSelectorByLabel.put("Current Location", "csc-intake-currentLocationGroup");
      fieldSelectorByLabel.put("Current Location Fitness", "csc-intake-currentLocationFitness");
      fieldSelectorByLabel.put("Current Location Note", "csc-intake-currentLocationNote");
      fieldSelectorByLabel.put("Current Owner", "csc-intake-currentOwner");
      fieldSelectorByLabel.put("Depositor", "csc-intake-depositor");
      fieldSelectorByLabel.put("Depositor Requirements", "csc-intake-depositorsRequirements");
      fieldSelectorByLabel.put("Entry Date", "csc-intake-entryDate");
      fieldSelectorByLabel.put("Entry Method", "csc-intake-entryMethod");
      fieldSelectorByLabel.put("Entry Method", "csc-intake-entryMethods");
      fieldSelectorByLabel.put("Entry Note", "csc-intake-entryNote");
      fieldSelectorByLabel.put("Entry Reason", "csc-intake-entryReason");
      fieldSelectorByLabel.put("Field Collection Date", "csc-intake-fieldCollectionDate");
      fieldSelectorByLabel.put("Field collection event name", "csc-intake-fieldCollectionEventName");
      fieldSelectorByLabel.put("Field collection event name", "csc-intake-fieldCollectionEventNames");
      fieldSelectorByLabel.put("Field collection method", "csc-intake-fieldCollectionMethods");
      fieldSelectorByLabel.put("Field collection note", "csc-intake-fieldCollectionNote");
      fieldSelectorByLabel.put("Field collection number", "csc-intake-fieldCollectionNumber");
      fieldSelectorByLabel.put("Field collection place", "csc-intake-fieldCollectionPlace");
      fieldSelectorByLabel.put("Field collection source", "csc-intake-fieldCollectionSources");
      fieldSelectorByLabel.put("Field collector", "csc-intake-fieldCollectors");
      fieldSelectorByLabel.put("Insurance", "csc-intake-insuranceInformation");
      fieldSelectorByLabel.put("Insurance Note", "csc-intake-insuranceNote");
      fieldSelectorByLabel.put("Insurer", "csc-intake-insurers");
      fieldSelectorByLabel.put("Intake Entry Number", "csc-intake-entryNumber");
      fieldSelectorByLabel.put("Location", "csc-intake-locationInformation");
      fieldSelectorByLabel.put("Location Date", "csc-intake-locationDate");
      fieldSelectorByLabel.put("Normal Location", "csc-intake-normalLocation");
      fieldSelectorByLabel.put("Object Collection Information", "csc-intake-objectCollectionInformation");
      fieldSelectorByLabel.put("Object Entry Information", "csc-intake-objectEntryInformation");
      fieldSelectorByLabel.put("Packing Note", "csc-intake-packingNote");
      fieldSelectorByLabel.put("Policy Number", "csc-intake-insurancePolicyNumber");
      fieldSelectorByLabel.put("Reference Number", "csc-intake-insuranceReferenceNumber");
      fieldSelectorByLabel.put("Reference Number", "csc-intake-valuationReferenceNumber");
      fieldSelectorByLabel.put("Renewal Date", "csc-intake-insuranceRenewalDate");
      fieldSelectorByLabel.put("Return Date", "csc-intake-returnDate");
      fieldSelectorByLabel.put("Valuation", "csc-intake-valuationInformation");
      fieldSelectorByLabel.put("Valuer", "csc-intake-valuer");

      // Entries above with duplicate text labels, to be checked by a human.
      //
      // Some may represent labels for headers above repeatable fields/groups.
      // Duplicate text label: Current Location (appears 2 times)
      // Duplicate text label: Entry Method (appears 2 times)
      // Duplicate text label: Field collection event name (appears 2 times)
      // Duplicate text label: Reference Number (appears 2 times)

      // Messagekeys in the 'uispec' file not matched by text labels
      // in the message bundles file (e.g. 'core-messages.properties').
      //
      // Some of these may be record metadata that is never displayed
      // in the UI. If so, they can be added to the script's stoplist.
      //
      // In other instances, these may represent messagekeys for section
      // headers in the record, rather than for fields.
      //
      // Finally, these may represent sub-records (e.g. Contact in
      // Person and Organization) or other sub-data structures.
      //
      // Not found: text label for message key 'intake-conditionCheckMethodLabel'
      // Not found: text label for message key 'intake-conditionCheckReasonLabel'
      // Not found: text label for message key 'intake-conditionCheckerOrAssessorLabel'
      // Not found: text label for message key 'intake-fieldCollectionMethodLabel'
      // Not found: text label for message key 'intake-fieldCollectionSourceLabel'
      // Not found: text label for message key 'intake-fieldCollectorLabel'
      // Not found: text label for message key 'intake-insurerLabel'

      // ----- End of entries generated by an automated script -----
        
    }
}
